//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.4.4
//     from Assets/Scripts/Input Controls/FPControls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @FPControls : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @FPControls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""FPControls"",
    ""maps"": [
        {
            ""name"": ""Player_Map"",
            ""id"": ""011977a3-736e-4613-b773-664d00a77ad7"",
            ""actions"": [
                {
                    ""name"": ""Movement"",
                    ""type"": ""Value"",
                    ""id"": ""453d6801-8c6c-4e63-b5ec-be72bd0b169b"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Look"",
                    ""type"": ""Value"",
                    ""id"": ""e69670cd-0163-46b0-8ff5-913d342624ec"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Jump"",
                    ""type"": ""Button"",
                    ""id"": ""4010aae2-3c53-42d5-943d-717a19dcaf7f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Sprint"",
                    ""type"": ""Button"",
                    ""id"": ""94146f06-650e-45e5-850c-f65a2eec1ca3"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ManaAttack"",
                    ""type"": ""Button"",
                    ""id"": ""aa0bf4eb-ad63-4ccd-af39-1fcb03a8488e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MeleeAttack"",
                    ""type"": ""Button"",
                    ""id"": ""66acf2e2-ed1a-4975-a711-970b7ef327b7"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SwapManaStyle"",
                    ""type"": ""Button"",
                    ""id"": ""69d26a49-be75-4478-83b6-ed7e7d2463b1"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Swap"",
                    ""type"": ""Button"",
                    ""id"": ""efa2db99-7463-4c4b-b283-25c5ee96e0fd"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Swap1"",
                    ""type"": ""Button"",
                    ""id"": ""cbcbccb3-e4dc-473c-b8e4-1c8ada46d8fd"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Interact"",
                    ""type"": ""Button"",
                    ""id"": ""3d133420-a1d6-4ac1-970b-82656c351e5f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""WASD"",
                    ""id"": ""54ca7bca-3a15-4345-b188-e8a94032c71c"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""24e4bd5b-bf7e-4775-8fee-78ac9a9d1fbc"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""8d3e531a-6720-4f20-884b-df4a83060ad1"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""c5ef32e1-a2ba-4e02-95ed-6ec5a108db9e"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""8b9c36c8-b067-4595-9de5-6d8bf830dc1f"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""e9407284-bb96-4a22-afa0-40e3e9444500"",
                    ""path"": ""<Mouse>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""bcf249d4-73c1-4ccc-a27a-bec6c84abe7f"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""519718a9-2793-4ffb-894e-0d52cdbcd5fb"",
                    ""path"": ""<Keyboard>/shift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Sprint"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6a5ab479-8630-4a59-b7b7-a55e3c3cc158"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ManaAttack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""dc5b219c-f62e-4142-aa8c-b393b6ee1d6f"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MeleeAttack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0de3cd77-8b66-4735-9595-2f180e972bfa"",
                    ""path"": ""<Keyboard>/r"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SwapManaStyle"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6ed89b1f-7f5b-448c-91ba-4fbaab490d17"",
                    ""path"": ""<Keyboard>/rightAlt"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Swap"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e525a0a2-7ac8-42a1-95b3-6ee65960a563"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""448c7454-0b8f-468b-b785-19e009358d65"",
                    ""path"": ""<Keyboard>/b"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Swap1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Player_Map
        m_Player_Map = asset.FindActionMap("Player_Map", throwIfNotFound: true);
        m_Player_Map_Movement = m_Player_Map.FindAction("Movement", throwIfNotFound: true);
        m_Player_Map_Look = m_Player_Map.FindAction("Look", throwIfNotFound: true);
        m_Player_Map_Jump = m_Player_Map.FindAction("Jump", throwIfNotFound: true);
        m_Player_Map_Sprint = m_Player_Map.FindAction("Sprint", throwIfNotFound: true);
        m_Player_Map_ManaAttack = m_Player_Map.FindAction("ManaAttack", throwIfNotFound: true);
        m_Player_Map_MeleeAttack = m_Player_Map.FindAction("MeleeAttack", throwIfNotFound: true);
        m_Player_Map_SwapManaStyle = m_Player_Map.FindAction("SwapManaStyle", throwIfNotFound: true);
        m_Player_Map_Swap = m_Player_Map.FindAction("Swap", throwIfNotFound: true);
        m_Player_Map_Swap1 = m_Player_Map.FindAction("Swap1", throwIfNotFound: true);
        m_Player_Map_Interact = m_Player_Map.FindAction("Interact", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Player_Map
    private readonly InputActionMap m_Player_Map;
    private IPlayer_MapActions m_Player_MapActionsCallbackInterface;
    private readonly InputAction m_Player_Map_Movement;
    private readonly InputAction m_Player_Map_Look;
    private readonly InputAction m_Player_Map_Jump;
    private readonly InputAction m_Player_Map_Sprint;
    private readonly InputAction m_Player_Map_ManaAttack;
    private readonly InputAction m_Player_Map_MeleeAttack;
    private readonly InputAction m_Player_Map_SwapManaStyle;
    private readonly InputAction m_Player_Map_Swap;
    private readonly InputAction m_Player_Map_Swap1;
    private readonly InputAction m_Player_Map_Interact;
    public struct Player_MapActions
    {
        private @FPControls m_Wrapper;
        public Player_MapActions(@FPControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Movement => m_Wrapper.m_Player_Map_Movement;
        public InputAction @Look => m_Wrapper.m_Player_Map_Look;
        public InputAction @Jump => m_Wrapper.m_Player_Map_Jump;
        public InputAction @Sprint => m_Wrapper.m_Player_Map_Sprint;
        public InputAction @ManaAttack => m_Wrapper.m_Player_Map_ManaAttack;
        public InputAction @MeleeAttack => m_Wrapper.m_Player_Map_MeleeAttack;
        public InputAction @SwapManaStyle => m_Wrapper.m_Player_Map_SwapManaStyle;
        public InputAction @Swap => m_Wrapper.m_Player_Map_Swap;
        public InputAction @Swap1 => m_Wrapper.m_Player_Map_Swap1;
        public InputAction @Interact => m_Wrapper.m_Player_Map_Interact;
        public InputActionMap Get() { return m_Wrapper.m_Player_Map; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(Player_MapActions set) { return set.Get(); }
        public void SetCallbacks(IPlayer_MapActions instance)
        {
            if (m_Wrapper.m_Player_MapActionsCallbackInterface != null)
            {
                @Movement.started -= m_Wrapper.m_Player_MapActionsCallbackInterface.OnMovement;
                @Movement.performed -= m_Wrapper.m_Player_MapActionsCallbackInterface.OnMovement;
                @Movement.canceled -= m_Wrapper.m_Player_MapActionsCallbackInterface.OnMovement;
                @Look.started -= m_Wrapper.m_Player_MapActionsCallbackInterface.OnLook;
                @Look.performed -= m_Wrapper.m_Player_MapActionsCallbackInterface.OnLook;
                @Look.canceled -= m_Wrapper.m_Player_MapActionsCallbackInterface.OnLook;
                @Jump.started -= m_Wrapper.m_Player_MapActionsCallbackInterface.OnJump;
                @Jump.performed -= m_Wrapper.m_Player_MapActionsCallbackInterface.OnJump;
                @Jump.canceled -= m_Wrapper.m_Player_MapActionsCallbackInterface.OnJump;
                @Sprint.started -= m_Wrapper.m_Player_MapActionsCallbackInterface.OnSprint;
                @Sprint.performed -= m_Wrapper.m_Player_MapActionsCallbackInterface.OnSprint;
                @Sprint.canceled -= m_Wrapper.m_Player_MapActionsCallbackInterface.OnSprint;
                @ManaAttack.started -= m_Wrapper.m_Player_MapActionsCallbackInterface.OnManaAttack;
                @ManaAttack.performed -= m_Wrapper.m_Player_MapActionsCallbackInterface.OnManaAttack;
                @ManaAttack.canceled -= m_Wrapper.m_Player_MapActionsCallbackInterface.OnManaAttack;
                @MeleeAttack.started -= m_Wrapper.m_Player_MapActionsCallbackInterface.OnMeleeAttack;
                @MeleeAttack.performed -= m_Wrapper.m_Player_MapActionsCallbackInterface.OnMeleeAttack;
                @MeleeAttack.canceled -= m_Wrapper.m_Player_MapActionsCallbackInterface.OnMeleeAttack;
                @SwapManaStyle.started -= m_Wrapper.m_Player_MapActionsCallbackInterface.OnSwapManaStyle;
                @SwapManaStyle.performed -= m_Wrapper.m_Player_MapActionsCallbackInterface.OnSwapManaStyle;
                @SwapManaStyle.canceled -= m_Wrapper.m_Player_MapActionsCallbackInterface.OnSwapManaStyle;
                @Swap.started -= m_Wrapper.m_Player_MapActionsCallbackInterface.OnSwap;
                @Swap.performed -= m_Wrapper.m_Player_MapActionsCallbackInterface.OnSwap;
                @Swap.canceled -= m_Wrapper.m_Player_MapActionsCallbackInterface.OnSwap;
                @Swap1.started -= m_Wrapper.m_Player_MapActionsCallbackInterface.OnSwap1;
                @Swap1.performed -= m_Wrapper.m_Player_MapActionsCallbackInterface.OnSwap1;
                @Swap1.canceled -= m_Wrapper.m_Player_MapActionsCallbackInterface.OnSwap1;
                @Interact.started -= m_Wrapper.m_Player_MapActionsCallbackInterface.OnInteract;
                @Interact.performed -= m_Wrapper.m_Player_MapActionsCallbackInterface.OnInteract;
                @Interact.canceled -= m_Wrapper.m_Player_MapActionsCallbackInterface.OnInteract;
            }
            m_Wrapper.m_Player_MapActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Movement.started += instance.OnMovement;
                @Movement.performed += instance.OnMovement;
                @Movement.canceled += instance.OnMovement;
                @Look.started += instance.OnLook;
                @Look.performed += instance.OnLook;
                @Look.canceled += instance.OnLook;
                @Jump.started += instance.OnJump;
                @Jump.performed += instance.OnJump;
                @Jump.canceled += instance.OnJump;
                @Sprint.started += instance.OnSprint;
                @Sprint.performed += instance.OnSprint;
                @Sprint.canceled += instance.OnSprint;
                @ManaAttack.started += instance.OnManaAttack;
                @ManaAttack.performed += instance.OnManaAttack;
                @ManaAttack.canceled += instance.OnManaAttack;
                @MeleeAttack.started += instance.OnMeleeAttack;
                @MeleeAttack.performed += instance.OnMeleeAttack;
                @MeleeAttack.canceled += instance.OnMeleeAttack;
                @SwapManaStyle.started += instance.OnSwapManaStyle;
                @SwapManaStyle.performed += instance.OnSwapManaStyle;
                @SwapManaStyle.canceled += instance.OnSwapManaStyle;
                @Swap.started += instance.OnSwap;
                @Swap.performed += instance.OnSwap;
                @Swap.canceled += instance.OnSwap;
                @Swap1.started += instance.OnSwap1;
                @Swap1.performed += instance.OnSwap1;
                @Swap1.canceled += instance.OnSwap1;
                @Interact.started += instance.OnInteract;
                @Interact.performed += instance.OnInteract;
                @Interact.canceled += instance.OnInteract;
            }
        }
    }
    public Player_MapActions @Player_Map => new Player_MapActions(this);
    public interface IPlayer_MapActions
    {
        void OnMovement(InputAction.CallbackContext context);
        void OnLook(InputAction.CallbackContext context);
        void OnJump(InputAction.CallbackContext context);
        void OnSprint(InputAction.CallbackContext context);
        void OnManaAttack(InputAction.CallbackContext context);
        void OnMeleeAttack(InputAction.CallbackContext context);
        void OnSwapManaStyle(InputAction.CallbackContext context);
        void OnSwap(InputAction.CallbackContext context);
        void OnSwap1(InputAction.CallbackContext context);
        void OnInteract(InputAction.CallbackContext context);
    }
}
